services:
  caddy:
    image: caddy:latest
    # networks:
    #   - caddy
    restart: always
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./portfolio/build:/portfolio
      - ./finances-flask/build:/finances
      - ./bind-mounts/caddy/caddy_data:/data
      - ./bind-mounts/caddy/caddy_config:/config
      - ./bind-mounts/caddy/caddy_logs:/var/log

  ddclient:
    image: ghcr.io/linuxserver/ddclient:3.11.2
    restart: always
    container_name: ddclient
    env_file:
      - 'finances.env'
    volumes:
      - ./ddclient-config:/config

  finances-app:
    image: elijah415hz/finances-flask:github-build
    # networks:
    #   - caddy
    #   - finances
    restart: always
    container_name: finances-app
    env_file:
      - 'finances.env'

  finances-db:
    image: ghcr.io/linuxserver/mariadb:10.5.17
    # networks:
    #   - finances
    restart: always
    container_name: finances-db
    volumes:
      - ./bind-mounts/finances-db/config:/config
      - ./finances-flask/db:/config/initdb.d
    env_file:
      - 'finances.env'

  finances-cron:
    image: elijah415hz/finances-cron:arm64
    # networks:
    #   - finances
    restart: always
    container_name: finances-cron
    volumes:
      - ./finances-flask/cron:/usr/src/cron
    env_file:
      - 'finances.env'

  nextcloud:
    image: nextcloud:26
    # networks:
    #   - caddy
    #   - nextcloud
    restart: always
    container_name: nextcloud
    volumes:
      - ./bind-mounts/nextcloud:/var/www/html
    env_file:
      - 'nextcloud.env'

  nextcloud_db:
    image: linuxserver/mariadb:10.5.17
    # networks:
    #   - nextcloud
    restart: always
    container_name: nextcloud-db
    volumes:
      - ./bind-mounts/nextcloud_db:/config
      - ./bind-mounts/nextcloud-db-backup:/config/initdb.d
    env_file:
      - 'nextcloud.env'

  nextcloud-cron:
    image: nextcloud:26
    restart: always
    container_name: nextcloud-cron
    # networks:
    #   - nextcloud
    volumes:
      - ./bind-mounts/nextcloud:/var/www/html
    entrypoint: /cron.sh

  collabora:
    image: collabora/code:latest
    # networks:
    #   - caddy
    #   - nextcloud
    restart: always
    container_name: collabora
    env_file:
      - 'nextcloud.env'
    volumes:
      - ./collabora-config/coolwsd.xml:/etc/coolwsd/coolwsd.xml

  onlyoffice:
    image: onlyoffice/documentserver:latest
    restart: always
    container_name: onlyoffice
    env_file:
      - 'onlyoffice.env'
    volumes:
      - ./bind-mounts/onlyoffice/document_data:/var/www/onlyoffice/Data
      - ./bind-mounts/onlyoffice/document_log:/var/log/onlyoffice

  jellyfin:
    image: jellyfin/jellyfin:10.9.9
    # networks:
    #   - caddy
    restart: always
    container_name: jellyfin
    volumes:
      - ./bind-mounts/jellyfin/config:/config
      - ./bind-mounts/jellyfin/cache:/cache
      - ./bind-mounts/nextcloud/data/blarvis/files/Media:/media
    env_file:
      - 'jellyfin.env'

  nightscout:
    image: nightscout/cgm-remote-monitor:latest
    # networks:
    #   - caddy
    restart: always
    container_name: nightscout
    env_file:
      - 'nightscout.env'

  nightscout-db:
    image: mongo
    restart: always
    volumes:
      - nightscout-db:/data/db
    env_file:
      - 'nightscout.env'

  stirling-pdf:
    image: frooodle/s-pdf
    container_name: stirling-pdf

  cloud-backup-cron:
    build: .
    restart: always
    container_name: cloud-backup-cron
    entrypoint: crond -l 2 -f
    volumes:
      - ./:/usr/ServerBackup
      - ./.pgpass:/root/.pgpass
      - ./rclone:/config/rclone
      - ./rclone/data:/data
      - ./backup.sh:/etc/periodic/daily/backup.sh
    env_file:
      - 'nextcloud.env'
      - 'cloud-backup-cron.env'
      - 'paperless.env'

  devops:
    image: elijah415hz/server-devops:github-build
    restart: always
    container_name: devops
    volumes:
      - ./bind-mounts/devops/pipe:/webserver/pipe
    env_file:
      - 'devops.env'

  bitwarden:
    image: vaultwarden/server:latest
    # networks:
    #   - caddy
    container_name: bitwarden
    restart: always
    volumes:
      - ./bind-mounts/bw-data:/data

  paperless-broker:
    image: docker.io/library/redis:7
    container_name: paperless-broker
    restart: unless-stopped
    volumes:
      - ./bind-mounts/paperless/redisdata:/data

  paperless-db:
    image: docker.io/library/postgres:15
    container_name: paperless-db
    restart: unless-stopped
    volumes:
      - ./bind-mounts/paperless/dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  paperless-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-webserver
    restart: unless-stopped
    depends_on:
      - paperless-db
      - paperless-broker
    volumes:
      - ./bind-mounts/paperless/data:/usr/src/paperless/data
      - ./bind-mounts/paperless/media:/usr/src/paperless/media
      - ./bind-mounts/nextcloud/data/blarvis/files/paperless-documents:/usr/src/paperless/media/documents/archive
      - ./bind-mounts/paperless/export:/usr/src/paperless/export
      - ./bind-mounts/nextcloud/data/blarvis/files/Document-Drop:/usr/src/paperless/consume
    env_file: paperless.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_DBHOST: paperless-db
      USERMAP_UID: 33
      USERMAP_GID: 33
volumes:
  nightscout-db:
# networks:
#   caddy:
#     external: true
#   nextcloud:
#   finances:
